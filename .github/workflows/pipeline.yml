name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - release/**
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  DOCKER_REGISTRY: docker.io
  DOCKER_IMAGE: myorg/myapp
  KUBE_CONTEXT: my-k8s-cluster
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}

jobs:
  # Matrix testing job on multiple OS and Node versions
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node: [14, 16, 18]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - name: Cache NPM dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ matrix.node }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node }}-

      - name: Install dependencies
        run: npm ci

      - name: Run tests with coverage
        run: npm test -- --coverage

      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report-${{ matrix.os }}-node${{ matrix.node }}
          path: coverage/

  # Job to build and publish Docker image (runs after tests succeed)
  build-and-publish-docker:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: |
            ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE }}:latest
            ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE }}:${{ github.sha }}

      - name: Upload image tag as artifact
        uses: actions/upload-artifact@v3
        with:
          name: image-tag
          path: image-tag.txt
      - run: echo "${{ github.sha }}" > image-tag.txt

  # Job to generate changelog and bump version
  semantic-release:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install dependencies
        run: npm ci

      - name: Run semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release

      - name: Upload changelog
        uses: actions/upload-artifact@v3
        with:
          name: changelog
          path: CHANGELOG.md

  # Manual approval before deployment
  approval:
    needs: [build-and-publish-docker, semantic-release]
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://myapp.example.com
    steps:
      - name: Await manual approval
        uses: peter-evans/slash-command-dispatch@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          reaction: eyes
          issue-type: pull-request
          commands: approve

  # Deploy to Kubernetes after approval
  deploy:
    needs: approval
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download changelog artifact
        uses: actions/download-artifact@v3
        with:
          name: changelog
          path: .

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Configure kubectl context
        run: kubectl config use-context ${{ env.KUBE_CONTEXT }}

      - name: Deploy to Kubernetes
        run: |
          kubectl set image deployment/myapp myapp=${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE }}:${{ github.sha }} -n production
          kubectl rollout status deployment/myapp -n production

      - name: Notify Slack of deployment
        uses: slackapi/slack-github-action@v1.23.0
        with:
          slack-webhook-url: ${{ env.SLACK_WEBHOOK_URL }}
          payload: |
            {
              "text": "Deployment successful for commit `${{ github.sha }}` to production environment. :rocket:"
            }
